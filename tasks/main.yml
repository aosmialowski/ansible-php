---
- name: Update APT cache
  apt: update_cache=yes cache_valid_time=86400

- name: Ensure dependencies are installed
  apt: "pkg={{ item }} state=present"
  with_items:
    - build-essential
    - autoconf
    - automake
    - libtool
    - bison
    - re2c
    - libxml2-dev
    - libcurl4-openssl-dev
    - libbz2-dev
    - libjpeg-dev
    - libpng12-dev
    - libxpm-dev
    - libfreetype6-dev
    - libgmp3-dev
    - libmcrypt-dev
    - libmysqlclient-dev
    - libpspell-dev
    - librecode-dev
    - libicu-dev
    - libc-client2007e-dev
    - libxslt1-dev

- name: Check if GMP header is already in a location accessible by GCC
  stat: path=/usr/include/gmp.h
  register: gmp_file

- name: Ensure GMP header is symlinked into a location accessible by GCC
  file: src=/usr/include/x86_64-linux-gnu/gmp.h dest=/usr/include/gmp.h state=link force=true
  when: gmp_file.stat.exists == false

- name: Check previously installed PHP version
  shell: php -i | grep -m 1 'PHP Version' | sed -ne 's/[^0-9]*\(\([0-9]\.\)\{0,4\}[0-9]\)\.*/\1/p'
  register: php_installed_version

- set_fact:
    php_installed: "{{ php_version == php_installed_version.stdout }}"

- name: Ensure PHP installation path does exist
  file: path="{{ php_installation_path }}" state=directory mode=0755
  when: php_installed|bool == False

- name: Clone PHP sources repository
  git:
    repo: https://git.php.net/repository/php-src.git
    dest: /usr/src/php-src
    version: "php-{{ php_version }}"
    accept_hostkey: yes
    depth: 1
  when: php_installed|bool == False

- name: Generate configure script
  shell: ./buildconf --force chdir=/usr/src/php-src

- name: Configure PHP compilation
  shell: >
    ./configure
    --prefix={{ php_installation_path }}
    --enable-mbstring
    --enable-fpm
    --enable-intl
    --enable-zip
    --enable-bcmath
    --enable-pcntl
    --enable-ftp
    --enable-exif
    --enable-calendar
    --enable-opcache
    --enable-pdo
    --enable-sysvmsg
    --enable-sysvsem
    --enable-sysvshm
    --enable-wddx
    --with-curl
    --with-mcrypt
    --with-iconv
    --with-gmp
    --with-kerberos
    --with-imap-ssl
    --with-pspell
    --with-gd
    --with-jpeg-dir=/usr
    --with-png-dir=/usr
    --with-zlib-dir=/usr
    --with-xpm-dir=/usr
    --with-freetype-dir=/usr
    --enable-gd-native-ttf
    --enable-gd-jis-conv
    --with-openssl
    --with-pdo-mysql=/usr
    --with-gettext=/usr
    --with-zlib=/usr
    --with-bz2=/usr
    --with-mysqli=mysqlnd
    --with-xsl
    --with-imap
    chdir=/usr/src/php-src
  when: php_installed|bool == False

- name: Compile PHP
  shell: make --jobs={{ ansible_processor_cores }} chdir=/usr/src/php-src
  when: php_installed|bool == False

- name: Install PHP
  shell: make install chdir=/usr/src/php-src
  when: php_installed|bool == False

- name: Install php-fpm init script
  template: src=fpm-init.js2 dest=/etc/init.d/php-fpm mode=0755
  notify: restart php-fpm
  when: php_installed|bool == False

- name: Create FPM configuration file
  template: src=php-fpm.conf.js2 dest={{ php_installation_path }}/etc/php-fpm.conf

- name: Create FPM pool configuration directory
  file: path={{ php_installation_path }}/etc/php-fpm.d state=directory

- name: Create default FPM pool
  template: src=fpm-pool.conf.js2 dest={{ php_installation_path }}/etc/php-fpm.d/www.conf

- name: Create PHP configuration file
  template: src=php.ini.js2 dest={{ php_installation_path }}/lib/php.ini

- name: Set PECL/PEAR configuration options
  shell: "{{ item }}"
  with_items:
    - pear config-set php_ini {{ php_installation_path }}/lib/php.ini
    - pecl config-set php_ini {{ php_installation_path }}/lib/php.ini
  notify: restart php-fpm

- name: Install optional PECL extensions
  shell: printf "\n" | pecl install -f {{ item }}
  with_items:
    php_pecl_extensions
  tags: [pecl]

- include: tools.yml